╔═══════════════════════════════════════════════════════════════════════════╗
║                   OBJECT DETECTION & TRACKING                             ║
║                        QUICK REFERENCE CARD                               ║
╚═══════════════════════════════════════════════════════════════════════════╝

┌─────────────────────────────────────────────────────────────────────────┐
│ 🚀 QUICK START                                                          │
└─────────────────────────────────────────────────────────────────────────┘

  1. Test Setup:     python test_setup.py
  2. Run App:        python object_tracking.py
  3. Or Use Menu:    .\run.ps1

┌─────────────────────────────────────────────────────────────────────────┐
│ ⌨️  KEYBOARD CONTROLS                                                    │
└─────────────────────────────────────────────────────────────────────────┘

  ESC ............. Exit application
  P ............... Pause/Resume video
  S ............... Save screenshot
  C ............... Clear trajectory trails (NEW!)

┌─────────────────────────────────────────────────────────────────────────┐
│ 📁 IMPORTANT FILES                                                      │
└─────────────────────────────────────────────────────────────────────────┘

  object_tracking.py ........ Main application (with trajectories!)
  object_detection.py ....... YOLOv4 wrapper
  test_setup.py ............. Verify installation
  download_models.py ........ Get model files
  
  TRAJECTORY_GUIDE.md ....... NEW! Trajectory feature guide
  USAGE_GUIDE.md ............ Complete manual
  SETUP_INSTRUCTIONS.md ..... Setup help
  PROJECT_SUMMARY.md ........ What was done

┌─────────────────────────────────────────────────────────────────────────┐
│ 🎯 VIDEO SOURCES                                                        │
└─────────────────────────────────────────────────────────────────────────┘

  Video File:    VIDEO_SOURCE = "video.mp4"
  Webcam:        VIDEO_SOURCE = 0
  IP Camera:     VIDEO_SOURCE = "rtsp://url"

  Change in: object_tracking.py (line ~17)

┌─────────────────────────────────────────────────────────────────────────┐
│ ⚙️  COMMON ADJUSTMENTS                                                  │
└─────────────────────────────────────────────────────────────────────────┘

  Detection Sensitivity (object_detection.py):
    More objects:  self.confThreshold = 0.3
    Default:       self.confThreshold = 0.5
    Less objects:  self.confThreshold = 0.7

  Tracking Distance (object_tracking.py):
    Fast objects:  if distance < 80
    Default:       if distance < 50
    Slow objects:  if distance < 30

  Trajectory Length (object_tracking.py):
    Short trails:  MAX_TRAJECTORY_POINTS = 10
    Default:       MAX_TRAJECTORY_POINTS = 30
    Long trails:   MAX_TRAJECTORY_POINTS = 50
    Very long:     MAX_TRAJECTORY_POINTS = 100

  Processing Speed (object_detection.py):
    Faster:        self.image_size = 320
    Balanced:      self.image_size = 416
    Accurate:      self.image_size = 608

┌─────────────────────────────────────────────────────────────────────────┐
│ 🐛 TROUBLESHOOTING                                                      │
└─────────────────────────────────────────────────────────────────────────┘

  Problem: "Could not open video source"
  Fix: Check file exists or use webcam (VIDEO_SOURCE = 0)

  Problem: "Failed to open NetParameter file"
  Fix: Run: python download_models.py

  Problem: Very slow performance
  Fix: Set image_size = 320 in object_detection.py

  Problem: No objects detected
  Fix: Lower confThreshold to 0.3

  Problem: Objects losing IDs
  Fix: Increase distance to 80 in object_tracking.py

┌─────────────────────────────────────────────────────────────────────────┐
│ 📊 WHAT YOU'LL SEE                                                      │
└─────────────────────────────────────────────────────────────────────────┘

  Green Boxes ......... Detected objects
  Colored Lines ....... NEW! Trajectory paths (unique color per object)
  Colored Dots ........ Historical position markers on trails
  Red Dots ............ Object center points (current position)
  White Outlines ...... Circle around current position
  Labels .............. ID:X ClassName Score
  Top Text ............ Tracking count & frame number

┌─────────────────────────────────────────────────────────────────────────┐
│ 🎯 DETECTABLE OBJECTS (80 classes)                                     │
└─────────────────────────────────────────────────────────────────────────┘

  Vehicles: car, truck, bus, motorcycle, bicycle, train, airplane, boat
  People: person
  Animals: dog, cat, horse, bird, sheep, cow, elephant, bear, zebra
  Sports: sports ball, baseball bat, tennis racket, frisbee, skateboard
  Items: chair, couch, table, bed, TV, laptop, book, cell phone
  ...and 50+ more! See dnn_model/classes.txt

┌─────────────────────────────────────────────────────────────────────────┐
│ 📋 FILE REQUIREMENTS                                                    │
└─────────────────────────────────────────────────────────────────────────┘

  ✓ Python 3.7+
  ✓ opencv-python
  ✓ numpy
  ✓ dnn_model/yolov4.weights (245 MB)
  ✓ dnn_model/yolov4.cfg
  ✓ dnn_model/classes.txt
  ✓ Video file or webcam

┌─────────────────────────────────────────────────────────────────────────┐
│ 💡 TIPS                                                                 │
└─────────────────────────────────────────────────────────────────────────┘

  • Test with webcam first (easier than video files)
  • Use absolute paths for video files if issues
  • Run test_setup.py to verify everything works
  • Lower confThreshold if missing objects
  • Increase distance if tracking breaks
  • Use smaller image_size for speed
  • GPU (CUDA) is 10x faster but optional
  • Press 'C' to clear cluttered trajectory trails
  • Adjust MAX_TRAJECTORY_POINTS for trail length
  • Save screenshots with 'S' to capture trajectories

┌─────────────────────────────────────────────────────────────────────────┐
│ 📚 HELP & DOCUMENTATION                                                 │
└─────────────────────────────────────────────────────────────────────────┘

  Quick Help:      This file (QUICK_REFERENCE.txt)
  Trajectories:    TRAJECTORY_GUIDE.md (NEW!)
  Full Manual:     USAGE_GUIDE.md
  Setup Guide:     SETUP_INSTRUCTIONS.md
  Project Info:    PROJECT_SUMMARY.md
  Original Docs:   README.md

┌─────────────────────────────────────────────────────────────────────────┐
│ 🔧 INSTALLATION COMMANDS                                                │
└─────────────────────────────────────────────────────────────────────────┘

  Install packages:
    pip install opencv-python opencv-contrib-python numpy

  Download models:
    python download_models.py

  Test setup:
    python test_setup.py

  Run application:
    python object_tracking.py

┌─────────────────────────────────────────────────────────────────────────┐
│ 🎓 LEARNING PATH                                                        │
└─────────────────────────────────────────────────────────────────────────┘

  1. Run test_setup.py to verify installation
  2. Read USAGE_GUIDE.md for detailed instructions
  3. Start with default settings
  4. Try webcam before video files
  5. Experiment with different videos
  6. Adjust settings for your use case
  7. Read code comments to understand how it works

┌─────────────────────────────────────────────────────────────────────────┐
│ 📞 SUPPORT                                                              │
└─────────────────────────────────────────────────────────────────────────┘

  Author: Suhas Uppala
  GitHub: https://github.com/Suhas-Uppala

  Issues? 
    1. Check USAGE_GUIDE.md troubleshooting section
    2. Run test_setup.py for diagnostics
    3. Check GitHub issues
    4. Create new issue if needed

╔═══════════════════════════════════════════════════════════════════════════╗
║  🎉 Everything is ready! Run: python object_tracking.py                 ║
╚═══════════════════════════════════════════════════════════════════════════╝
